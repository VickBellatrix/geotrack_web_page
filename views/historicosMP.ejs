<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Mapa de Historicos</title>
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
  <style>
    #map { height: 400px; }
  </style>
</head>
<body>
  <h1>Mapa de Historicos</h1>
  <div id="map"></div>
  
  <p id="circle-info"></p>

  <script src="https://unpkg.com/leaflet"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>
  <script>
    var historicalMap = L.map('map').setView([10.9878, -74.7889], 13); // Iniciar el mapa centrado en Barranquilla

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetmap</a> contributors'
    }).addTo(historicalMap);

    var drawnItems = L.featureGroup().addTo(historicalMap);

    var drawControl = new L.Control.Draw({
      draw: {
        circle: true,
        marker: false,
        polygon: false,
        polyline: false,
        rectangle: false,
      },
      edit: {
        featureGroup: drawnItems
      }
    });
    historicalMap.addControl(drawControl);

    historicalMap.on(L.Draw.Event.CREATED, function (e) {
      var layer = e.layer;
      drawnItems.addLayer(layer);

      // Obtener las coordenadas del círculo dibujado
      var latLng = layer.getLatLng();
      var radius = layer.getRadius() / 1000; // Convertir el radio a kilómetros

      var circleInfo = document.getElementById('circle-info');
      circleInfo.textContent = `Círculo dibujado en Latitud: ${latLng.lat}, Longitud: ${latLng.lng}, Radio: ${radius} km`;

      verificarDatosEnArea(latLng.lat, latLng.lng, radius);
    });

    function verificarDatosEnArea(lat, lng, radio) {
      // Realizar la solicitud al servidor con las coordenadas del círculo y el radio
      fetch(`/datos?lat=${lat}&lng=${lng}&radio=${radio}`)
        .then(response => {
          // Verificar si la respuesta es exitosa (código de estado 200)
          if (response.ok) {
            // Procesar la respuesta como JSON
            return response.json();
          } else {
            // En caso de error, lanzar una excepción con el mensaje de error
            throw new Error('Error en la solicitud al servidor');
          }
        })
        .then(data => {
          // Procesar los datos recibidos del servidor
          if (data.length > 0) {
            // Si hay datos disponibles en el área, realizar alguna acción
            console.log('Datos dentro del área:', data);
            alert('¡Se encontraron datos dentro del área!');
          } else {
            // Si no hay datos disponibles en el área, mostrar un mensaje
            console.log('No hay datos dentro del área.');
            alert('No se encontraron datos dentro del área.');
          }
        })
        .catch(error => {
          // Manejar errores de la solicitud
          console.error('Error:', error);
          alert('Ocurrió un error al verificar los datos en el área.');
        });
    }
  </script>
</body>
</html>
